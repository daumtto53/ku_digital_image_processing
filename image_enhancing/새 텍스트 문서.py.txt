import numpy as np

def imhist(im):
  # calculates normalized histogram of an image
	m, n = im.shape			//image의 height, width
	h = [0.0] * 256
	for i in range(m):
		for j in range(n):
			h[im[i, j]]+=1		//각 grayscale의 빈도수
	return np.array(h)/(m*n)		//h를 np.array로 만든 후, linear 하게 * (1/픽셀수)

def cumsum(h):
	# finds cumulative sum of a numpy array, list
	return [sum(h[:i+1]) for i in range(len(h))]    0 < i < 255, h[0:255] , sum을 iterable하게 돌려서 계산.


def histeq(im):
	#calculate Histogram
	h = imhist(im)
	cdf = np.array(cumsum(h)) #cumulative distribution function
	sk = np.uint8(255 * cdf) #finding transfer function values
	s1, s2 = im.shape
	Y = np.zeros_like(im)
	# applying transfered values for each pixels
	for i in range(0, s1):
		for j in range(0, s2):
			Y[i, j] = sk[im[i, j]]
	H = imhist(Y)
	#return transformed image, original and new istogram,
	# and transform function
	return Y , h, H, sk	



'''
1. image를 읽어온다.
2. grayscale의 빈도수를 계산한다.
	3. 빈도수 / 픽셀 수 반환.
4. 빈도수에 대한 cumulative sum을 구해준다.
5. cumulative sum에 대해 255를 곱해주어 normalize한 것을 풀어준다.
6. matching 시켜준다.
